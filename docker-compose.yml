version: '3.9'
services:
    # Redis
    redis:
        image: redis:alpine3.17
        command: redis-server
        ports:
            - "6378:6379"
        restart: "on-failure"
        networks:
            - task-management
    postgres-db:
        image: kartoza/postgis:12.0
        volumes:
            - postgres_data:/var/lib/postgresql
        environment:
            - POSTGRES_DBNAME=${POSTGRES_DBNAME}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASS=${POSTGRES_PASS}
        restart: "on-failure"
        networks:
            - task-management
    web:
        build:
            context: .
            dockerfile: Dockerfile
        command: "/opt/venv/bin/python manage.py runserver 0.0.0.0:8000"
        volumes:
            - .:/home/app/web:Z
        ports:
            - "8000:8000"
        env_file:
            -   .env
        links:
            - postgres-db
            - redis
        depends_on:
            -   postgres-db
        networks:
            - task-management
    # Celery worker
    worker:
        build:
            context: .
            dockerfile: Dockerfile
        command: sh -c "chmod +x ./run_celery.sh && sh ./run_celery.sh"
        volumes:
            - .:/home/app/web:Z
        env_file:
            -   .env
        links:
            - postgres-db
            - redis
        depends_on:
            - redis
            - postgres-db
            - web
        networks:
            - task-management
    # Celery worker
    beat:
        build:
            context: .
            dockerfile: Dockerfile
        command: sh -c "chmod +x ./run_celery_beat.sh && sh ./run_celery_beat.sh"
        volumes:
            - .:/home/app/web:Z
        env_file:
            -   .env
        links:
            - postgres-db
            - worker
            - redis
        depends_on:
            - postgres-db
            - worker
            - redis
            - web
        networks:
            - task-management
networks:
    task-management:
        driver: bridge

volumes:
    postgres_data: