version: '3'
services:
    # Redis
    redis:
        image: redis:alpine
        command: redis-server
        ports:
            - "6378:6379"
    # Django
    web:
        build:
            context: .
            dockerfile: Dockerfile.prod
        container_name: web
        hostname: web
        command: "/opt/venv/bin/python manage.py runserver 0.0.0.0:8000"
        volumes:
          - .:/home/app/web:Z
          - static_volume:/home/app/web/static
          - media_volume:/home/app/web/media
        ports:
            - "8000:8000"
        env_file:
            - ./.env
        links:
            - redis
  # Celery worker
    worker:
      build:
        context: .
      command: sh -c "chmod +x ./run_celery.sh && sh ./run_celery.sh"
      volumes:
        - .:/home/app/web:Z
      restart: "on-failure"
      links:
        - redis
      depends_on:
        - redis
  # Celery worker
    beat:
      build:
        context: .
      command: sh -c "chmod +x ./run_celery_beat.sh && sh ./run_celery_beat.sh"
      volumes:
        - .:/home/app/web:Z
      restart: "on-failure"
      links:
        - worker
        - redis
      depends_on:
        - worker
        - redis
    nginx-proxy:
        container_name: nginx-proxy
        build: nginx
        restart: always
        ports:
          - "443:443"
          - "80:80"
        volumes:
          - static_volume:/home/app/web/static
          - media_volume:/home/app/web/media
          - certs:/etc/nginx/certs
          - html:/usr/share/nginx/html
          - vhost:/etc/nginx/vhost.d
          - /var/run/docker.sock:/tmp/docker.sock:ro
        depends_on:
          - web
    nginx-proxy-letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        env_file:
          - ./.env.prod.proxy-companion
        volumes:
          - static_volume:/home/app/web/static
          - media_volume:/home/app/web/media
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - certs:/etc/nginx/certs
          - html:/usr/share/nginx/html
          - vhost:/etc/nginx/vhost.d
          - acme:/etc/acme.sh
        depends_on:
          - nginx-proxy

volumes:
  certs:
  html:
  vhost:
  acme:
  static_volume:
  media_volume: